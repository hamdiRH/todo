{"version":3,"sources":["Newtodo.js","action.js","todolist.js","App.js","store.js","reducer.js","index.js"],"names":["Newtodo","useState","newtodo","setNewtodo","inputBorder","setinputBorder","dispatch","useDispatch","className","type","style","border","placeholder","onChange","e","target","value","id","onClick","payload","isComplete","todo","Math","random","Todolist","props","todolist","useSelector","state","width","map","el","i","request","onKeyUp","key","textDecoration","App","store","createStore","action","filter","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"4LAkDeA,EA/CC,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACJC,EADI,OAEkBF,oBAAS,GAF3B,mBAEbG,EAFa,KAEAC,EAFA,KAGdC,EAAWC,cAejB,OACE,qBAAKC,UAAU,oBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,4CACA,8CACA,uBACEC,KAAK,OACLC,MAAO,CAAEC,OAAQP,EAAc,gBAAkB,QACjDI,UAAU,yBACVI,YAAY,iBACZC,SAAU,SAACC,GACTX,EAAWW,EAAEC,OAAOC,OACpBX,GAAe,IAEjBW,MAAOd,IAET,wBACEO,KAAK,SACLQ,GAAG,aACHT,UAAU,kBACVU,QAlCiB,WACnBhB,GACFI,ECT+B,CAACG,KAAK,UAAUU,QDUrC,CACNC,YAAY,EACZC,KAAMnB,EACNe,GAAIK,KAAKC,YAGbpB,EAAW,KAEXE,GAAe,IAmBb,uB,OE8BOmB,EA3DE,SAACC,GAChB,IAAMnB,EAAWC,cACXmB,EAAWC,aAAY,SAACC,GAAD,OAAWA,KAExC,OACE,sBAAKpB,UAAU,6BAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,0DACA,oBAAIE,MAAO,CAAEmB,MAAO,cAErBH,EAASI,KAAI,SAACC,EAAIC,GAAL,OACZ,qBAAKxB,UAAU,WAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,wBACEA,UAAU,+BACVU,QAAS,WACPZ,EDrB0B,CAACG,KAAK,WAAWU,QCqBrBY,EAAGd,MAH7B,SAMGc,EAAGX,WAAa,OAAS,aAE5B,wBACEZ,UAAU,+BACVU,QAAS,WACPZ,ED/BwB,CAACG,KAAK,aAAaU,QC+BvBY,EAAGd,MAH3B,oBAQA,wBACET,UAAU,+BACVU,QAAS,WACPZ,EDpC+B,CAACG,KAAK,UAAUU,QCoCpBY,EAAGd,MAHlC,oBAQCc,EAAGE,QACF,uBACExB,KAAK,OACLyB,QAAS,SAACpB,GAAD,MACG,UAAVA,EAAEqB,KACF7B,EDhDsB,CAACG,KAAK,aAAaU,QCgDrB,2BAAKY,GAAN,IAAUV,KAAMP,EAAEC,OAAOC,aAIhD,oBACEN,MAAO,CAAE0B,eAAgBL,EAAGX,WAAa,eAAiB,IAD5D,SAGGW,EAAGV,WAtCmBW,UCHxBK,G,MATH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,S,eCTOC,EAAQC,aCFE,WAAyB,IAAxBX,EAAuB,uDAAf,GAAIY,EAAW,uCACrC/B,EAAkB+B,EAAlB/B,KAAMU,EAAYqB,EAAZrB,QACd,OAAQV,GACN,IAAK,UACH,MAAM,GAAN,mBAAWmB,GAAX,CAAkBT,IACpB,IAAK,aACH,OAAOS,EAAMa,QAAO,SAACV,GAAD,OAAQA,EAAGd,KAAOE,KACxC,IAAK,aACH,OAAOS,EAAME,KAAI,SAACC,GAAD,OACfA,EAAGd,KAAOE,EAAQF,GAAlB,uCAA4Bc,GAAOZ,GAAnC,IAA4Cc,SAAS,IAAUF,KAEnE,IAAK,WACH,OAAOH,EAAME,KAAI,SAACC,GAAD,OACfA,EAAGd,KAAOE,EAAV,2BAAyBY,GAAzB,IAA6BX,YAAaW,EAAGX,aAAeW,KAEhE,IAAK,UACH,OAAOH,EAAME,KAAI,SAACC,GAAD,OACfA,EAAGd,KAAOE,EAAV,2BAAyBY,GAAzB,IAA6BE,SAAUF,EAAGE,UAAYF,KAG1D,QACE,OAAOH,KDjBXc,OAAOC,8BAAgCD,OAAOC,gC,MEGhDC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.e05b96dc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { addTodo } from \"./action\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst Newtodo = () => {\r\n  const [newtodo, setNewtodo] = useState(\"\");\r\n  const [inputBorder, setinputBorder] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleAddnewTodo = () => {\r\n    if (newtodo) {\r\n      dispatch(\r\n        addTodo({\r\n          isComplete: false,\r\n          todo: newtodo,\r\n          id: Math.random(),\r\n        })\r\n      );\r\n      setNewtodo(\"\");\r\n    } else {\r\n      setinputBorder(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container request\">\r\n      <div className=\"col request-content\">\r\n        <h1>To-Do App!</h1>\r\n        <p>Add New To-Do</p>\r\n        <input\r\n          type=\"text\"\r\n          style={{ border: inputBorder ? \"4px solid red\" : \"none\" }}\r\n          className=\"form-control input-val\"\r\n          placeholder=\"Enter new task\"\r\n          onChange={(e) => {\r\n            setNewtodo(e.target.value);\r\n            setinputBorder(false);\r\n          }}\r\n          value={newtodo}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          id=\"add-button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleAddnewTodo}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Newtodo;\r\n","export const addTodo = (payload) => ({type:\"ADDTODO\",payload})\r\nexport const deleteTodo = (payload) => ({type:\"DELETETODO\",payload})\r\nexport const updateTodo = (payload) => ({type:\"UPDATETODO\",payload})\r\nexport const completeTodo = (payload) => ({type:\"COMPLETE\",payload})\r\nexport const updateTodoRequest = (payload) => ({type:\"REQUEST\",payload})\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteTodo,\r\n  updateTodo,\r\n  completeTodo,\r\n  updateTodoRequest,\r\n} from \"./action\";\r\nconst Todolist = (props) => {\r\n  const dispatch = useDispatch();\r\n  const todolist = useSelector((state) => state);\r\n\r\n  return (\r\n    <div className=\"container response-content\">\r\n      <div className=\"response-title\">\r\n        <h3>Lets get some work done!</h3>\r\n        <hr style={{ width: \"100px\" }} />\r\n      </div>\r\n      {todolist.map((el, i) => (\r\n        <div className=\"response\" key={i}>\r\n          <div className=\"d-flex w-100 pt-3\">\r\n            <button\r\n              className=\"btn btn-outline-primary mr-3\"\r\n              onClick={() => {\r\n                dispatch(completeTodo(el.id));\r\n              }}\r\n            >\r\n              {el.isComplete ? \"Undo\" : \"Complete\"}\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-primary mx-3\"\r\n              onClick={() => {\r\n                dispatch(deleteTodo(el.id));\r\n              }}\r\n            >\r\n              Remove\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-primary mx-3\"\r\n              onClick={() => {\r\n                dispatch(updateTodoRequest(el.id));\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n            {el.request ? (\r\n              <input\r\n                type=\"text\"\r\n                onKeyUp={(e) =>\r\n                  e.key === \"Enter\" &&\r\n                  dispatch(updateTodo({ ...el, todo: e.target.value }))\r\n                }\r\n              />\r\n            ) : (\r\n              <h4\r\n                style={{ textDecoration: el.isComplete ? \"line-through\" : \"\" }}\r\n              >\r\n                {el.todo}\r\n              </h4>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","import React from \"react\";\r\n\r\nimport Newtodo from \"./Newtodo\";\r\nimport ToDoList from \"./todolist\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Newtodo />\r\n      <ToDoList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\nexport const store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","export const reducer = (state = [], action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"ADDTODO\":\r\n      return [...state, payload];\r\n    case \"DELETETODO\":\r\n      return state.filter((el) => el.id !== payload);\r\n    case \"UPDATETODO\":\r\n      return state.map((el) =>\r\n        el.id === payload.id ? { ...el, ...payload, request: false } : el\r\n      );\r\n    case \"COMPLETE\":\r\n      return state.map((el) =>\r\n        el.id === payload ? { ...el, isComplete: !el.isComplete } : el\r\n      );\r\n    case \"REQUEST\":\r\n      return state.map((el) =>\r\n        el.id === payload ? { ...el, request: !el.request } : el\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}